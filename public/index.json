[{"content":"Intro The following guide details how I originally set up this very website. It also includes sources so you can expand on what I did easier with the official documents from the tools themselves.\nMy website was set up on Fedora Linux, however I have placed links throughout to aid others in unique setups.\nDefinitions Hugo: A framework used to create websites, commonly used for blogs.\nPaperMod: A theme for your Hugo website. Please do consider using other themes.\nSnap: A package manager commonly used on Linux machines. This makes it easier to maintain an up-to-date version of Hugo.\nGit: A version control tool you\u0026rsquo;ll be using to maintain the source code and files to your website.\nGitHub: A platform to host your Git repository; also allows for publishing your website to a domain (for free) at \u0026lt;username\u0026gt;.github.io. Here users can create issues and pull requests to make changes to your website, if desired. We\u0026rsquo;ll also be setting up an action/workflow to automatically publish the website changes whenever we push them to GitHub.\nQOwnNotes: A markdown editor that displays markdown text in a unique way, still showing the formatting, while also keeping all the plaintext visible. This makes editing really easy since you can see the raw document and the formatted document at the same time.\nYAML: AKA YAML Ain\u0026rsquo;t Markup Language is a human-readable language that allows you to configure applications easily. The nested structure makes sense from a readability standpoint, but also makes it easy for computers to understand as well, which is why we\u0026rsquo;ll be using it to configure our blog. Read more about it in the latest YAML spec.\nInstallation and Setup of Git \u0026amp; GitHub Before following the guide from The Odin Project, know that they expect that you are using Ubuntu (either the OS itself or within Windows Subsystem for Linux), MacOS, or ChromeOS. If you are using Fedora and related distros, you will begin by running the following command to install Git, otherwise, follow the guide from The Odin Project:\nsudo dnf install git Setting Up Git Introduction to Git Git Basics Use the above guides from The Odin Project to learn the basics of Git \u0026amp; GitHub.\nImportantly, make sure you use a GitHub private email address, set your default repository to main, and generate a key so that you can push to your GitHub repository.\nAfterwards, create a GitHub repository and name it \u0026lt;yourusername\u0026gt;.github.io if you desire to set up a website using GitHub\u0026rsquo;s free domain.\nThen, clone the empty repo to your computer to prepare for the installation of Hugo.\nInstallation of Snap, a Linux Package Manager If you are using Linux, I recommend installing Snap. This avoids any errors with out of date versions of Hugo distributed by package managers on various distros. Otherwise, you can skip this step.\nUse the Official Guide to get started.\nWhen you install Snap, it is also important to ensure that Snap is part of your path. If you want to run Snap programs without problems, the following commands will allow you to simply type the name of the snap program to run it.\nFirst, check to see if Snap is already part of the path:\necho $PATH If not, this next command will add all Snap programs to the path:\nexport PATH=$PATH:/snap/bin This is important because if you want to run a command like hugo server and you installed the program using Snap, your command line will not recognize the hugo command unless you added Snap applications to your path.\nInstall Hugo If you are not on Linux or simply want to get your information from the source, check the Official Guide.\nRun the following command to install Hugo from Snap:\nsudo snap install hugo --channel=extended Now verify that Hugo is the latest version:\nhugo version To update Hugo, a Snap application, you\u0026rsquo;ll run:\nsudo snap refresh hugo Creating a Hugo Site In your local git clone of your domain\u0026rsquo;s empty GitHub repository, run the following command to initiate a Hugo site:\nhugo new site . --format yaml The . represents your current directory. .. represents your parent directory.\nMake sure you --format yaml so that the config file matches up with what PaperMod expects, at least in its documentation. It is also easier to read than toml and json.\nAdd theme (PaperMod) There are many themes to choose from when it comes to Hugo. Browse the official themes website and pick your favorite one.\nAfterwards, follow the guide from the theme to install it. For PaperMod, they provided a few methods on their installation page.\nThe recommended method of installation is as a Git Submodule:\ngit submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) This clones just the latest version of PaperMod into the folders.\nThe reason why we use submodules is because it keeps the Git repositories separate (separate commit histories) and allows for easy updating of PaperMod. To update PaperMod in the future, run the following command:\ngit submodule update --remote --merge For those curious, an official explanation of Git submodules can be found under Chapter 7.11 Git Tools - Submodules in the official Git book.\nEditing hugo.yaml Now you must configure your .yaml file for your website so that it points to the correct theme. You can find a sample .yaml file on the PaperMod Installation Wiki. Just know that your website will not build properly with the following discontinued entry:\npaginate: 5 If you are curious about the functionality of any of the .yaml parameters, check them on the Features \u0026amp; Variables pages on the PaperMod Wiki.\nGithub Pages Afterwards, you need to make sure your GitHub repo is set to public so you can publish to GitHub pages, including using the free domain \u0026lt;username\u0026gt;.github.io.\nFollow the official Host on GitHub Pages guide from Hugo. To walk through this process.\nYou\u0026rsquo;ll also want to make use of the GitHub documentation for pages in order to get the specifics on GitHub set up.\nQOwnNotes Once the website is set up, I use QOwnNotes to write the posts in Markdown. I like this tool because the interface can be made as simple or complex as you want it to be, it\u0026rsquo;s loaded with features, and the way it displays Markdown is really nice.\nTo install from the Snap store:\nsnap install qownnotes I personally use the Flatpak version since that is what I had on my computer already, however you can install this app however you would like by following the QOwnNotes Installation Guide.\nIt is important to mention that QOwnNotes has a SQL Database it stores in the same folder as your notes, along with a trash can. You can disable the trash can, but not the database. This is important because you will have it synced up with GitHub and you may not want those files to show.\nLook into using a .gitignore file to avoid this problem.\nYAML Front Matter Explanation Before we go into the workflow to create a blog post, there are a few things that need to be explained first.\nThe following is an example of a YAML Header:\n--- date: 2025.10.14 12:25 draft: true title: \u0026#39;My First Blog Post\u0026#39; tags: [hugo, papermod] categories: [Tech] --- date: This will be the date that shows up for the blog post once you publish it to the website. You can set it here. Also in QOwnNotes, Ctrl+t will automatically fill in the current date. You can change the QOwnNotes date format to your favorite here.\ndraft: This lets you set the status of your post, whether it is a draft or not. There are ways to configure Hugo/PaperMod to show draft posts if desired, but by default they are hidden on the website. You\u0026rsquo;ll have to mark this as true once the post is completed.\ntitle: The title that appears on the blog\ntags: the tags you want to assign to the post\ncategories: The categories of your blog you want to post to\nTo continue looking into the page variables contained in the .yaml frontmatter, consult the PaperMod Wiki: Page Variables.\nWorkflow Once you have everything set up and ready to go, there will be a general workflow you can follow to publish articles simply.\nUse QOwnNotes to write your markdown post. If you do not understand Markdown, it\u0026rsquo;s worth giving the Markdown Guide a read. If you want to see a preview of how your post looks, run hugo server in your local Git repository to see the changes live at http://localhost:1313/ Once your post is ready, change the YAML front matter from Draft: True to Draft: False. Now we will leverage the power of Git and GitHub to publish your content. Make sure your site is saved and run the following commands in local git repository: git add . git commit -m \u0026#34;\u0026lt;summarize your update here\u0026gt;\u0026#34; git push origin main Through the power of GitHub Actions, you should see the updates go live on your website after a few minutes. ","permalink":"http://localhost:1313/posts/create-website-hugo-papermod-qownnotes/","summary":"Step-by-step guide to building a personal website using Hugo, the PaperMod theme, and QOwnNotes. Covers setup on Fedora Linux, GitHub Pages deployment, YAML configuration, and workflow automation.","title":"Create a Website Using Hugo, PaperMod, and QOwnNotes"},{"content":"This is something I\u0026rsquo;ve thought about for a while now, I\u0026rsquo;ve just never got around to doing it, however now that I have time, I think it\u0026rsquo;s important to share my thoughts.\nThroughout the past year of studying IT, a topic that comes up over and over again is documentation. We claim that we value high-quality documentation. However, how far are we willing to take this mentality?\nThose in the field know the feeling \u0026ndash; After working on a long ticket, suddenly something causes a click, whether it be an article, video, or verbal communication from a senior technician, the problem now has a solution. You\u0026rsquo;re then left wondering how much quicker you could have completed the task if someone had documented something.\nHence why we create extensive ticket notes and KB (Knowledge Base) articles in our documentation system of choice so we may refer back to those documents to save time and headache in the future. This record of exactly what happened is incredibly useful, but it\u0026rsquo;s not the only useful thing you get from quality documentation.\nDo you truly understand? If you can\u0026rsquo;t explain it simply, you don\u0026rsquo;t understand it well enough.\nAlbert Einstein\nNow, think about what the technician goes through as they write out their notes, KB articles, and resumes. They have to process everything they have experienced, from minutes to years after the fact, and they have to understand it well enough to write about it. They may also have to train others, which can also be aided with a high quality document.\nThe understanding that comes from producing high quality documents is more valuable than people realize, and I believe the process of documentation fleshes out your own understanding as well.\nDocumentation as an act of learning; Why you should start a blog Too many people go through the trouble of studying certifications, learning on the job, completing labs, only to forget this information after a few months. Even worse, I\u0026rsquo;ve heard of people who finally get an interview, but falter when it comes to describing the very thing they studied so hard to be in the position they are in.\nIt\u0026rsquo;s easy to enter an interview and point at some certification or project or degree, but to be able to describe it, and with clarity, is key.\nThat\u0026rsquo;s why I propose that if you are interested in IT, you start your journey by learning how to create a website and document your learning journey to the best of your ability through regular blog posts. These posts can serve as evidence that you have gone through the process of learning something to the point where you can share it well enough to be considered competent on that topic.\nWhy I created this blog I wanted to prevent myself from falling behind, not on any one topic, but on the stuff I already know, or aught to know. By writing a blog, it not only benefits me in that I\u0026rsquo;m presented with a clear understanding of where I\u0026rsquo;ve been and what I\u0026rsquo;ve done, but it also opens the opportunity to help others grow in their knowledge and motivation.\nI intend on keeping this blog professional and helpful to all readers who visit. I want any projects I add to this site to be documented to the best of my ability, like I could follow it with no other help and complete the task from scratch. Even better, to not require extra help with the guides I create, but to link many supplemental resources I used to create the documents.\nIf you are interested in copying this approach, feel free to! I feel that everyone has something to bring to the table, and you can benefit yourself at the same time through this process. For those who are curious, I have documented everything I did to get started with this blog here: Create a Website using Hugo and PaperMod\nA brief story I remember years ago, trying to learn how to code felt more like trying to learn how to learn how to code. I had this vague goal of what I wanted to do, but no idea how to start. Following tutorials felt fruitless because knowing how to go off on my own was not something I was familiar with. My process was:\nFollow the tutorial by the book, taking a bottom up approach, learning all the fundamentals and building blocks of coding Become lost not knowing how to apply the things I\u0026rsquo;ve learned into meaningful projects and contributions This is not a skill we are given right off the bat. We have to experiment enough to learn how to grow by ourselves, or we need someone who guides us, like a tutor, not a robot. It\u0026rsquo;s so easy to fall into the trap of just following directions, whether it be from a straightforward YouTube video or the latest AI model. However, knowing when to step back and ask meaningful questions, then iterate on those questions, experimenting with them, is the difference between being stuck in so called tutorial hell and escaping to a self-directed freedom where you understand what you did and why it works.\nThis is why in communities like OSSU/The Borr Project, the topic of AI is so shunned. While hallucinations are a big part of the problem with AI, the main error many people face is copying what it does without understanding the why behind each step.\nThe solution here can be seen as a mentality: From now on, strive to not just follow tutorials, but to understand the underlying process behind each step and the reasoning that goes into each step. When you do this, you will be able to effectively explain to others technical topics which can build their skills or serve to prove your own skills.\nAs for this blog: While I intend on documenting many things throughout the coming years in this blog, I do not desire readers to just \u0026ldquo;follow directions\u0026rdquo;. I want them to feel like I pointed them in the right direction to kickstart their own learning and understanding on the subject.\nI hope this has been a meaningful article to read. If you have any comments, I value constructive criticism and invite you to submit an issue on this website\u0026rsquo;s GitHub repository.\n","permalink":"http://localhost:1313/posts/why-it-people-should-blog/","summary":"IT professionals often value documentation, but few take it beyond ticket notes or KB articles. Blogging transforms that habit into a tool for deeper learning and professional growth.","title":"Why IT People Should Blog"},{"content":"Having the Right Attitude Before we get started, I want to address the #1 factor that leads to success in this program: Motivation.\nIf you don\u0026rsquo;t believe you can pass the test and get a good job, you will not.\nYou have to trust the process and believe in yourself that even if you don\u0026rsquo;t understand the topics right now, you will do everything it takes to improve and succeed.\nEveryone struggles through this course, and rightly so! There are two massive volumes of content that take roughly 4 months of constant study to get through. Don\u0026rsquo;t feel bad if something is confusing; ask questions and figure it out.\nAnother aspect is being able to accept constructive criticism. If someone corrects you, treat it as an opportunity for growth, not criticism. You\u0026rsquo;ll find that this is an effective way of learning.\nFor more information on what makes a successful mindset, see this article:\nGrowth Mindset vs. Fixed Mindset: What\u0026rsquo;s the Difference? With the right mindset, you\u0026rsquo;ll have the solid foundation needed to begin study. Now let\u0026rsquo;s move into some of the materials available to you throughout your CCNA/Network+ studies.\nMaterials Provided by C-TEC In the C-TEC Cybersecurity Program you are provided the following materials:\nThe Official Cert Guide Library for CCNA Contains some of the best practice tests available, more than enough to study for and pass the CCNA Create an account and register both volumes of the Official Cert Guide (OCG) Library on Cisco Press and Pearson Test Prep in order to access the supplemental resources (such as the practice tests) CCNA Portable Command Guide Your teacher Your classmates Alumni accessible through Discord Google Classroom In the classroom, there will be many linked external resources, labs, and practice tests, which also double as your homework Finally, one of the most valuable resources that C-TEC provides for the CCNA (and any of the certifications they offer) is accountability. You are given a teacher and a whole class of students who all want you to succeed.\nFree Resources If you are not enrolled at C-TEC, no worries! There are many free resources online to assist in studying both the CCNA and Network+. You can of course purchase resources, like the Official Cert Guide mentioned above, but it is not required.\nHere are a few free resources you can use to get the most out of self study:\nWendel Odom\u0026rsquo;s Network Upskill Free CCNA Course Playlist CertSkills Website Jeremy\u0026rsquo;s IT Lab Free CCNA Course CCNA Labs \u0026amp; Flashcards Josh Madakor CCNA Practice Questions Practical Networking SubnetIPv4.com SubnettingPractice.com Wendel Odom\u0026rsquo;s Network Upskill vs Jeremy\u0026rsquo;s IT Lab Jeremy\u0026rsquo;s IT Lab: Excellent lectures with in-depth explanations on every single CCNA topic, often going above and beyond the official exam objectives. Contains 40+ labs with explanations that solidify each of the exam objectives. Has practice questions after every video. One downfall is that it is not directly mapped with the OCG, however I have manually mapped his videos to each section for your convenience.\nWendell Odom\u0026rsquo;s Network Upskill: A variety of different style lectures with a focus on active recall and differing perspectives from the OCG to complement the book set. Matches the order of the OCG for convenience. As of writing this blog, it is still incomplete, but offers a unique take on a CCNA course. A very cool feature are the \u0026ldquo;Interview Prep\u0026rdquo; videos, which get you thinking about how to professionally talk about what you\u0026rsquo;ve learned.\nIf I had to choose one, I would lean towards Jeremy\u0026rsquo;s IT Lab. However, I feel it is best to utilize both at different times. I recommend watching Wendell Odom\u0026rsquo;s Free CCNA Course along with reading the book throughout the 4 months of networking class you have at C-TEC, then during the last month, review by watching all of Jeremy\u0026rsquo;s IT Lab.\nWhy? By immersing yourself in CCNA study through multiple different sources, it helps you to gain a deeper understanding of the subjects. While Jeremy might not make a topic click, maybe the OCG or Wendell Odom will.\nMaking the Most of Your Resources I cannot stress this enough: ask as many questions as possible, even if they seem silly. For every question you ask, there are likely other students who were thinking the same thing, but did not ask. When you ask the question and engage with the class, it helps you remember things better and helps others who may have had the same questions.\nOne of the best ways to learn is by teaching others, so by helping someone on their lab or to explain a difficult concept to them can help you to better understand what you\u0026rsquo;re talking about when it comes to passing the certifications, and more importantly, the interview.\nAs for Discord, many students share resources they find online or create, like flashcards. Make sure you join to gain access to these resources and potentially connect with C-TEC alumni as well. You may even want to look at setting up study groups to hang out with your class and improve the chances of everyone\u0026rsquo;s success.\nYou will need to install Packet Tracer in order to do most CCNA level labs (including those created by Wendell Odom, Jeremy\u0026rsquo;s IT Lab, and those provided by C-TEC). If you aren\u0026rsquo;t doing labs, it is extremely difficult to succeed at the CCNA and Network+. Do yourself a favor and become fluent in solving networking labs. After a while, you start to enjoy them.\nIn order to use the flashcards provided by Jeremy\u0026rsquo;s IT Lab and Josh Madakor, you\u0026rsquo;ll need to install Anki, a flashcard tool.\nFor a deep dive on specific topics, you can visit Practical Networking\u0026rsquo;s Playlists for a deep dive on topics such as ACLs, subnetting, NAT, OSPF, and cryptography. His website SubnetIPv4.com even contains some practice problems to assist you in getting better.\nEach Week in Class Here, I\u0026rsquo;ve provided a checklist you can use to make sure you\u0026rsquo;re using class time as efficiently as possible.\nWhen I took the class, the pace was about 1 book part per week, or 1 chapter per day.\nWhen you\u0026rsquo;re in class, make sure you are regularly doing all of the following: Pay attention, take notes, do labs to the best of your ability, ask questions Do quick Google searches or ask AI about topics that you might be curious about or have not learned before. It\u0026rsquo;s good to get a brief introduction to assist in understanding the teacher. Choose 1 of the following series to review during break/in-between class. Keep in mind that 2x speed is recommended as this is review, but pause and take notes as needed: Jeremy\u0026rsquo;s IT Lab (Videos Mapped by Chapter) Wendell Odom (His playlist is already in the order of the books) Optionally, do the labs that go along with Jeremy\u0026rsquo;s CCNA Course, these are good for the topics that were only briefly mentioned in class Speed read through the OCG, slowing down if there is anything you need to focus on, have the OCG open to help you with labs Do all DIKTA (Do I know the Answer) \u0026amp; Part Review Questions on Pearson Test Prep for the section you are studying Take the quiz assigned in class slowly, think about each question, do not review the quiz before submitting, afterwards, look at what you got wrong and study it, or even throw it into AI and ask to describe why you got it wrong Before the CCNA Exam Complete all or almost all of the Pearson Test Prep CCNA Exam Content. The per volume exams and the full exams share the same content, so I recommend doing the CCNA Volume 1 Exam 1, Volume 2 Exam 1, CCNA Full Exam 3, and CCNA Full Exam 4. Do the per volume exams using Study mode and the full exam ones using Practice Exam mode. Look at your scores from the CCNA practice exams and focus your study on areas you struggle with.\nLook at the CCNA Exam Topics and review anything that you are uncomfortable with. Keywords: Troubleshoot, Configure, Verify, \u0026amp; Interpret are all topics I would do more extensive lab study on. Recognize, Explain, Compare, etc mean that it\u0026rsquo;s more knowledge based. See pages 594-595 in the OCG Vol. 2 for a chart that goes over this stuff.\nTry to Complete the CCNA Final Lab Exam before taking the test. It helps a ton during the lab sections in the real exam. If you get done early, try to complete Jeremy\u0026rsquo;s IT Lab CCNA MEGA LAB.\nAsk the teachers lots of questions to fill as many knowledge gaps as possible before it\u0026rsquo;s too late.\nRead the last chapter of Volume 2. It has more in depth test taking tips, a chart of everything you need to be able to configure, and more helpful stuff.\nDuring the test It helped me to use the earplugs that are provided in the testing center. In fact, I attribute the reason I had so much time left to the earplugs. They help you focus by blocking out background noise, which means your attention can be shifted towards the questions. Also, a good meal, hydration, and sleep helps too.\nThe CCNA is special amongst exams you take at C-TEC because unlike other exams, you cannot go back and review your answers. This can be frightening to many, however it is a blessing in disguise. You will not have time to go back to review your answers on most certification tests, and usually, your first instinct is correct when it comes to taking the test. When you go back to review your answers, you are more likely to switch a correct answer to an incorrect answer than the reverse.\nUse it to your advantage by worrying only about the single question/lab that is on your screen at one time. Nothing else matters, focus on that one question until you are confident you picked the best answer you could possibly pick, then move on and forget about it. Sometimes, I even take the provided dry erase marker and use it to assist in reading the screen. Use whatever helps you focus on the question at hand, and you will succeed.\nUsing this strategy is also recommended on tests that you are allowed to review your answers on, however it is a bit more forgiving on those tests if you are 100% sure you got an earlier question wrong (this is the only case where you should change your answer).\nIn order to be successful in the labs, you will need to have a full understanding of every command covered in the OCG. Many students in previous years were not even able to start with the labs because if the question is asking you to do something in a specific way and you didn\u0026rsquo;t know that was possible, it\u0026rsquo;s really hard to guess. However, if you did have experience on a lab beforehand, but you just can\u0026rsquo;t remember the specifics, you can save yourself by using the autocomplete present in Cisco IOS along with the ? key to find the correct command(s).\nIf you fail a Certification Exam Don\u0026rsquo;t give up hope. These exams are tough. However, failing an exam is one of the best ways to gain experience for the next attempt.\nImmediately after failing, write down in a notebook everything you can remember from the test. You can use your notes about the exam for your own study, but it\u0026rsquo;s against the NDA to share those notes.\nThen look at the exam topics list and think about which areas you could improve on.\nFrom there, revisit practice tests, look at different lectures, reread the OCG, and use alternative resources to understand what stumped you during the test.\nAfterward, you\u0026rsquo;ll have an advantage and can walk in confident that you did everything you needed to succeed.\nHow the Network+ Compares to the CCNA You could also call this section \u0026ldquo;Before the Network+ Exam\u0026rdquo;. After studying for the CCNA, there are only a few topics remaining to master the Network+, and you should easily pass given that you completed all CCNA studies. In fact, I don\u0026rsquo;t recommend studying for the Network+ exclusively at all, with the few exceptions mentioned below.\nWhy? Because often, it is the most difficult CompTIA exam people face, and after taking it myself, I can confirm that the PBQs align heavily with knowledge best obtained from CCNA labs.\nHowever, I would look at the Exam Objectives and review anything you need to touch up on.\nSome of the things I used or wish I used before taking the Net+ are:\nPort Numbers for CCNA/Net+ Flashcards Troubleshooting Methodology Flashcards Professor Messer\u0026rsquo;s DNS Records Video For more study of DNS Records, a very common topic in IT, see Cloudflare\u0026rsquo;s DNS Records Guide Also, be sure to fully complete CCNA studies before taking the Network+. There are some niche topics towards the end that are in both certifications and you don\u0026rsquo;t want to miss those questions. And read on, most of the tips that help pass the CCNA will help you with the Network+!\nContinuing your Networking Education Congratulations, you passed the CCNA! Go ahead and celebrate that you completed the most difficult and rewarding certification that the C-TEC Cybersecurity Program has to offer.\nIf you are looking for more, consider studying for one of the CCNP Enterprise tests, as it is the logical next step for prospective network engineers.\nCCNA Lectures Mapped to the OCG Parts For your convenience, I have ordered Jeremy\u0026rsquo;s IT Lab by the CCNA Official Cert Guide, as seen below:\nOCG Part 1-1: Introduction to Networking OCG Part 1-2: Implementing Ethernet LANs OCG Part 1-3: Implementing VLANs and STP OCG Part 1-4: IPv4 Addressing (Subnetting) OCG Part 1-5: IPv4 Routing OCG Part 1-6: OSPF OCG Part 1-7: IPv6 OCG Part 2-1: Wireless LANs OCG Part 2-2: IP Access Control Lists (\u0026amp; TCP/IP) OCG Part 2-3: Security Services OCG Part 2-4: IP Services OCG Part 2-5: Network Architecture OCG Part 2-6: Network Automation Last Updated: 2025.10.22\n","permalink":"http://localhost:1313/posts/ccna-networkplus-guide-c-tec-cybersecurity/","summary":"Complete CCNA and Network+ guide for C-TEC Cybersecurity students featuring structured study plans, mapped lectures, and exam prep resources.","title":"Ultimate CCNA \u0026 Network+ Guide for C-TEC Cybersecurity"}]